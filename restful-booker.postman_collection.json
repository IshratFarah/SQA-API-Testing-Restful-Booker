{
	"info": {
		"_postman_id": "3ef467be-a1c2-4d01-a5af-e449b40c7790",
		"name": "restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26077504"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"// Validate Header\r",
									"\r",
									"pm.test(\"Content-Type header is present\", () => {\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"\r",
									"// Validate Response code \r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// Validate Response \r",
									"\r",
									"pm.test(\"Body contains token\",() => {\r",
									"  pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// // Valid Credentials\r\n\r\n// {\r\n//     \"username\" : \"admin\",\r\n//     \"password\" : \"password123\"\r\n// }\r\n\r\n\r\n// // Invalid Username\r\n\r\n// {\r\n//     \"username\" : \"abc\",\r\n//     \"password\" : \"password123\"\r\n// }\r\n\r\n// // Invalid password\r\n\r\n// {\r\n//     \"username\" : \"admin\",\r\n//     \"password\" : \"123\"\r\n// }\r\n\r\n// // Invalid Credentials\r\n\r\n// {\r\n//     \"username\" : \"abc\",\r\n//     \"password\" : \"123\"\r\n// }\r\n\r\n// Empty Credentials\r\n\r\n{\r\n    \"username\" : \" \",\r\n    \"password\" : \" \"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "GetBookingIds",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"// Response code - Status 200\r",
									"\r",
									"pm.test(\"Successful GetBookingIds\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstname",
									"value": "Monica",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Geller",
									"type": "text",
									"disabled": true
								},
								{
									"key": "bookingdates[checkin]",
									"value": "2023-02-01",
									"type": "text",
									"disabled": true
								},
								{
									"key": "bookingdates[checkout]",
									"value": "2023-02-03",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "Jim",
									"disabled": true
								},
								{
									"key": "lastname",
									"value": "Brown",
									"disabled": true
								},
								{
									"key": "checkin",
									"value": "2018-01-01",
									"disabled": true
								},
								{
									"key": "checkout",
									"value": "2019-01-01",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"// // // Validate Header\r",
									"// // pm.test(\"Accept header is present\", () => {\r",
									"// //   pm.response.to.have.header(\"Accept\");\r",
									"// // });\r",
									"\r",
									"// // pm.test(\"Accept header is application/json\", () => {\r",
									"// //   pm.expect(pm.response.headers.get('Accept')).to.eql('application/json');\r",
									"// // });\r",
									"\r",
									"\r",
									"\r",
									"// // pm.test(\"Additional needs validation\", function(){\r",
									"// //     pm.expect(jsonData.additionalneeds).to.eql(\"Smelly Cat\");\r",
									"// // });\r",
									"\r",
									"// // Validate FirstName from Excel\r",
									"\r",
									"// pm.test(\"Firstname validation\", function(){\r",
									"//     pm.expect(jsonData.firstname).to.eql(pm.iterationData.get(\"firstName\"));\r",
									"// });\r",
									"\r",
									"// // Validate LastName from Excel\r",
									"\r",
									"// pm.test(\"Lastname validation\", function(){\r",
									"//     pm.expect(jsonData.lastname).to.eql(pm.iterationData.get(\"lastName\"));\r",
									"// });\r",
									"\r",
									"var code = pm.response.code\r",
									"// console.log(\"code: \" + code)\r",
									"console.log(pm.response.code)\r",
									"\r",
									"switch (code) {\r",
									"    case 200:\r",
									"        var jsonData = pm.response.json();\r",
									"        console.log(\"code: \" + code)\r",
									"        //Validate FirstName from Environment\r",
									"        pm.test(\"Firstname validation\", function () {\r",
									"            pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
									"        })\r",
									"\r",
									"        // Validate LastName from Environment\r",
									"        pm.test(\"Lastname validation\", function () {\r",
									"            pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
									"        })\r",
									"\r",
									"        pm.test(\"Total price validation\", function () {\r",
									"            pm.expect(jsonData.totalprice).to.eql(1000);\r",
									"        })\r",
									"\r",
									"        pm.test(\"Deposit paid validation\", function () {\r",
									"            pm.expect(jsonData.depositpaid).to.eql(true);\r",
									"        })\r",
									"\r",
									"        //Validate Checkin Date from Environment\r",
									"\r",
									"        pm.test(\"Checkin validation\", function () {\r",
									"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
									"        })\r",
									"\r",
									"\r",
									"        // Validate Checkout Date from Environment\r",
									"        pm.test(\"Checkout validation\", function () {\r",
									"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
									"        })\r",
									"        break;\r",
									"\r",
									"    case 404:\r",
									"        // console.log(\"code: \" + code)\r",
									"        pm.test(\"Something went wrong!\")\r",
									"        \r",
									"    \r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking_JSON",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// FirstName creation using Dynamic Variables\r",
									"\r",
									"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
									"console.log(\"First Name: \"+ firstName)\r",
									"pm.environment.set(\"firstName\",firstName)\r",
									"\r",
									"\r",
									"// LastName creation using Postman Dynamic Variables\r",
									"\r",
									"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
									"console.log(\"Last Name: \"+ lastName)\r",
									"pm.environment.set(\"lastName\",lastName)\r",
									"\r",
									"\r",
									"// Date generation using js library\r",
									"\r",
									"const moment = require('moment')\r",
									"const today = moment()\r",
									"\r",
									"pm.environment.set(\"checkin\",today.format(\"YYYY-MM-DD\"))\r",
									"pm.environment.set(\"checkout\",today.add(4, 'day').format(\"YYYY-MM-DD\"))\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"id\",jsonData.bookingid);\r",
									"\r",
									"// Validate Status Code\r",
									"\r",
									"pm.test(\"Response code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response message is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"// Validate Schema\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bookingid\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"booking\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"firstname\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"lastname\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"totalprice\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"depositpaid\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"bookingdates\": {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"checkin\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"checkout\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"checkin\",\r",
									"            \"checkout\"\r",
									"          ]\r",
									"        },\r",
									"        \"additionalneeds\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"firstname\",\r",
									"        \"lastname\",\r",
									"        \"totalprice\",\r",
									"        \"depositpaid\",\r",
									"        \"bookingdates\",\r",
									"        \"additionalneeds\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bookingid\",\r",
									"    \"booking\"\r",
									"  ]\r",
									"}\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"\r",
									"// Validate First Name \r",
									"\r",
									"pm.test(\"Firstname creation is validated\",function(){\r",
									"    pm.expect(jsonData.booking.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
									"});\r",
									"\r",
									"\r",
									"// Validate Last Name\r",
									"\r",
									"pm.test(\"Lastname creation is validated\",function(){\r",
									"    pm.expect(jsonData.booking.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
									"});\r",
									"\r",
									"// Validate Checkin Date\r",
									"\r",
									"pm.test(\"Checkin date creation is validated\",function(){\r",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
									"});\r",
									"\r",
									"// Validate Checkout Date\r",
									"\r",
									"pm.test(\"Checkout date creation is validated\",function(){\r",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{firstName}}\",\r\n    \"lastname\" : \"{{lastName}}\",\r\n    \"totalprice\" : 9999,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"{{checkin}}\",\r\n        \"checkout\" : \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\" : \"Snacks\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking_XML",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Monica</firstname>\r\n    <lastname>Geller</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <bookingdates>\r\n      <checkin>2018-01-01</checkin>\r\n      <checkout>2019-01-01</checkout>\r\n    </bookingdates>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n  </booking>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "baseUrl/booking",
							"host": [
								"baseUrl"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking_JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Firstname update validation\",function(){\r",
									"    pm.expect(jsonData.firstname).to.eql(\"Monica\");\r",
									"});\r",
									"\r",
									"pm.test(\"Lastname update validation\",function(){\r",
									"    pm.expect(jsonData.firstname).to.eql(\"Geller\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"firstname\": \"Monica\",\r\n        \"lastname\": \"Geller\",\r\n        \"totalprice\": 1000,\r\n        \"depositpaid\": true,\r\n        \"bookingdates\": {\r\n            \"checkin\": \"2023-01-01\",\r\n            \"checkout\": \"2023-01-03\"\r\n        },\r\n        \"additionalneeds\": \"None\"\r\n    }\r\n\r\n"
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking_XML",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Jim</firstname>\r\n    <lastname>Carrey</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <bookingdates>\r\n      <checkin>2018-01-01</checkin>\r\n      <checkout>2019-01-01</checkout>\r\n    </bookingdates>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n  </booking>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/3185",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"3185"
							]
						}
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking_JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Firstname partial update validation\", function(){\r",
									"    pm.expect(jsonData.firstname).to.eql(\"Monica\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lastname\" : \"Bing\",\r\n    \"bookingdates.checkout\" : \"2023-01-05\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking_XML",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"content-type": true
						}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "text/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <bookingdates>\r\n      <checkin>2023-01-01</checkin>\r\n      <checkout>2023-01-10</checkout>\r\n    </bookingdates>\r\n</booking>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/booking/551",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"551"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deletion validation\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/booking/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ping",
			"item": [
				{
					"name": "HealthCheck",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Curl",
			"item": [
				{
					"name": "Auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookingIds_All_id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookingIds_Filter_by_Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?firstname=Monica",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "Monica"
								},
								{
									"key": "lastname",
									"value": "Geller",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookingIds_Filter_by_BookingDate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking?checkin=2014-03-13&checkout=2014-05-21",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "2014-03-13"
								},
								{
									"key": "checkout",
									"value": "2014-05-21"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/6018",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"6018"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking_JSON_curl",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking_XML_curl",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\n    <firstname>Jim</firstname>\n    <lastname>Brown</lastname>\n    <totalprice>111</totalprice>\n    <depositpaid>true</depositpaid>\n    <bookingdates>\n      <checkin>2018-01-01</checkin>\n      <checkout>2019-01-01</checkout>\n    </bookingdates>\n    <additionalneeds>Breakfast</additionalneeds>\n  </booking>"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateBooking_URLencoded",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "firstname",
									"value": "Jim",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "Brown",
									"type": "text"
								},
								{
									"key": "totalprice",
									"value": "111",
									"type": "text"
								},
								{
									"key": "depositpaid",
									"value": "true",
									"type": "text"
								},
								{
									"key": "bookingdates[checkin]",
									"value": "2018-01-01",
									"type": "text"
								},
								{
									"key": "bookingdates[checkout]",
									"value": "2018-01-02",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "HealthCheck_curl",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/ping",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking_JSON",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=c7be708fbceb65a"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Phoebe\",\n    \"lastname\" : \"Buffay\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/846",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"846"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateBooking_XML",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"value": "application/xml"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46cGFzc3dvcmQxMjM="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\n    <firstname>James</firstname>\n    <lastname>Brown</lastname>\n    <totalprice>111</totalprice>\n    <depositpaid>true</depositpaid>\n    <bookingdates>\n      <checkin>2018-01-01</checkin>\n      <checkout>2019-01-01</checkout>\n    </bookingdates>\n    <additionalneeds>Breakfast</additionalneeds>\n  </booking>"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/846",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"846"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}